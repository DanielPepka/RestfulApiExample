@{
    ViewBag.Title = "Home Page";
}

<div class="page-header">
    <div class="row">
        <h1>ASP.NET Restful API Example</h1>
        <p>

        <p>This sample project was built as an example of expanding upon the default ASP.NET template in visual studio to create restful APIs to create, update, and delete records in a database.</p>
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading">This was built with the help of the following technologies and resources.</div>
                <div class="panel-body">
                    <a class="btn btn-primary " href="https://docs.microsoft.com/en-us/ef/ef6/">Entity Framework</a>
                    <a class="btn btn-primary " href="https://asp.net">ASP.Net</a>
                    <a class="btn btn-primary " href="https://www.typescriptlang.org/">Typescript</a>
                    @*<a class="btn btn-primary " href="https://www.asp.net/signalr">SignalR</a>*@
                    <a class="btn btn-primary " href="https://knockoutjs.com/">KnockoutJS</a>
                    @*<a class="btn btn-primary " href="http://sammyjs.org/">SammyJS</a>*@
                    <a class="btn btn-primary " href="https://getbootstrap.com/docs/3.3/">Bootstrap 3</a>
                    <a class="btn btn-primary " href="https://fontawesome.com/">FontAwesome</a>

                    <a class="btn btn-primary " href="https://www.w3schools.com/bootstrap/default.asp">W3schools</a>
                </div>
            </div>
        </div>
        </p>
        <p>
        <p>This sample project was built as an example of expanding upon the default ASP.NET template in visual studio to create restful APIs to create, update, and delete records in a database.</p>
        <div class="panel-group">
            <h3><div class="btn btn-xl btn-primary" data-bind="click: () => { SaveCollections();}">Save Changes</div></h3>
            <div class="col-md-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <a style="float:right" data-bind="click: () => { AddNewCollection();}" class="btn btn-lg btn-primary">Add New</a>
                        <h3>List Of Collections </h3>
                    </div>

                    <div style="display:none" class="panel-body" data-bind="visible: Utils.NotNull(collections())">
                        <div data-bind="if: !(isGettingCollections.isPosting())">
                            <table class="table table-hover table-bordered" style="margin-bottom: 0px; text-align: center">
                                <tr>
                                    <th>
                                        ID
                                    </th>
                                    <th>
                                        Collection Name
                                    </th>
                                    <th>Item Count</th>
                                    <th style="text-align: center">
                                        <a class="btn btn-default" data-bind="click: () => { ResetAll(); }">Reset All</a>
                                        <a class="btn btn-default" data-bind="click: () => { DeleteAll(); }">Delete All</a>
                                    </th>
                                </tr>
                                <tbody data-bind="foreach: collections">
                                    <tr data-bind="click: () => {$parent.SetSelectedCollection(exampleCollectionId);},
                                        style: {'background-color': Utils.NotNull($parent.selectedCollection()) &&  $parent.selectedCollection().exampleCollectionId === exampleCollectionId ? 'lightgray' : ''},
                                        css: {'success': isCreate(), 'warning': !isCreate() && !isDelete() && isModified(), 'danger': isDelete()}">
                                        <td data-bind="text: exampleCollectionId"></td>
                                        <td style="text-align: left">
                                            <span data-bind="if: Utils.NotNull($parent.selectedCollection()) &&  ($parent.selectedCollection().exampleCollectionId === exampleCollectionId)">
                                                <input style="min-width: 100%" class="form-control" data-bind="textInput: name" />
                                            </span>
                                            <span data-bind="if: Utils.IsNull($parent.selectedCollection()) ||  ($parent.selectedCollection().exampleCollectionId !== exampleCollectionId)">
                                                <span style="min-width: 100%" data-bind="text: name" />
                                            </span>
                                        </td>
                                        <td>
                                            <span data-bind="text: itemCount"></span>
                                        </td>
                                        <td>
                                            <span data-bind="if: !isCreate()">
                                                <a title="Undo any changes made to this collection" class="btn btn-default" data-bind="click: () => { Reset(); }">Reset</a>
                                            </span>
                                            <a title="Mark this collection for delete when the collection is saved." class="btn btn-default" data-bind="click: () => { $parent.DeleteCollections([exampleCollectionId]); }">Delete</a>
                                            <span data-bind="if: isModified() || isCreate() || isDelete()">
                                                <a title="Saving a collection also saves its items" class="btn btn-default" data-bind="click: () => { $parent.SaveCollections([exampleCollectionId]); }">Save</a>
                                            </span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div data-bind="if: Utils.IsNull(collections())">
                        <div class="panel-body">
                            No collections
                        </div>

                    </div>
                    <div data-bind="if: isGettingCollections.isPosting()">
                        <i class="fa fa-spinner fa-spin"></i>
                        Loading Collection List ....
                    </div>

                </div>
            </div>
            <div class="col-md-8">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span data-bind="visible: Utils.NotNull(selectedCollection())"><a style="float:right" data-bind="click: () => { AddNewItem(selectedCollection().exampleCollectionId);}" class="btn btn-lg btn-primary">Add New</a></span>
                        <h3>Selected Collection <small data-bind="text: Utils.NotNull(selectedCollection()) ? selectedCollection().name : 'none'"> </small></h3>
                    </div>
                    <div class="panel-body">
                        <div data-bind="visible: Utils.IsNull(selectedCollection())">
                            <div class="panel-body">
                                No selected collection
                            </div>

                        </div>
                        <div data-bind="visible: isGettingSelectedCollection.isPosting()">
                            <i class="fa fa-spinner fa-spin"></i>
                            Loading Selected Collection ....
                        </div>

                        <div style="display:none" data-bind="visible: Utils.NotNull(selectedCollection()) && !(isGettingSelectedCollection.isPosting())">
                            <table class="table table-hover table-bordered" style="margin-bottom: 0px;">
                                <tr>
                                    <th>
                                        ID
                                    </th>
                                    <th>
                                        String
                                    </th>
                                    <th>
                                        Int
                                    </th>
                                    <th>
                                        Bool
                                    </th>
                                    <th style="text-align: center">
                                        <a class="btn btn-default" data-bind="click: () => { ResetSelectedCollection(); }">Reset All</a>
                                        <a class="btn btn-default" data-bind="click: () => { DeleteAllItems(); }">Delete All</a>
                                    </th>
                                </tr>
                                <tbody data-bind="foreach: Utils.NotNull(selectedCollection()) ? selectedCollection().exampleItems() : []" -->
                                    <tr data-bind="css: {'success': isCreate(), 'warning': !isCreate() && !isDelete() && isModified(), 'danger': isDelete()}">
                                        <td>
                                            <span data-bind="text: exampleItemId"></span>
                                        </td>
                                        <td>
                                            <input type="text" style="min-width: 100%" class="form-control" data-bind="textInput: itemString" />
                                        </td>
                                        <td>
                                            <input type="number" style="min-width: 100%" class="form-control" data-bind="textInput: itemInt" />
                                        </td>
                                        <td>
                                            <input type="checkbox" style="min-width: 100%" class="form-control" data-bind="checked: itemBool" />
                                        </td>
                                        <td>
                                            <span data-bind="if: !isCreate()">
                                                <a title="Undo any changes made to this item" class="btn btn-default" data-bind="click: () => { Reset(); }">Reset</a>
                                            </span>
                                            <a title="Mark this item for delete when it or the collection is saved."
                                               class="btn btn-default"
                                               data-bind="click: () => { $parent.DeleteItems(exampleCollectionId, [exampleItemId]); }">
                                                Delete
                                            </a>
                                            <span data-bind="if: Utils.NotNull($parent.selectedCollection()) && !($parent.selectedCollection().isCreate())">
                                                <span data-bind="if: isModified() || isCreate() || isDelete()">
                                                    <a title="Saving the item" class="btn btn-default" data-bind="click: () => { $parent.SaveItem(exampleCollectionId, exampleItemId); }">Save</a>
                                                </span>
                                            </span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <div style="display:none" data-bind="visible: (isGettingSelectedCollection.isPosting())">
                            <i class="fa fa-spinner fa-spin"></i> Loading Selected Collection ....
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/index")

    <script type="text/javascript">
        window.baseUrl = '@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))';

        $(document).ready(function () {
            window.indexViewModel = new IndexViewModel();
            ko.applyBindings(window.indexViewModel);
        });
    </script>
}